# This template create all the application resources for the project
AWSTemplateFormatVersion: "2010-09-09"
Description: Application resources template
Parameters:
  WebKeyName:
    Description: Name of  an existing EC2 Keypair to enable access to the Instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be name of an existing EC2 KeyPair
  
  AppKeyName:
    Description: Name of  an existing EC2 Keypair to enable access to the Instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be name of an existing EC2 KeyPair

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.0.0.0/8

Resources:
  #Load balancer for Web facing Intances
  ExtLoadbalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      SecurityGroups: 
        - Fn::ImportValue: static-resources-Ext-SecurityGroupID
      Subnets:
        - Fn::ImportValue: Three-tier-Network-Public-Subnet1ID
        - Fn::ImportValue: Three-tier-Network-Public-Subnet2ID 

  ALBListener:  
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - forward
      LoadBalancerArn: !Ref ExtLoadbalancer
      Port: 80
      Protocol: HTTP

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 10
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue: Three-tier-Network-vpc
  
  #Internal LoadBalancer  
  IntLoadbalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      SecurityGroups: 
        - Fn::ImportValue: static-resources-Int-SecurityGroupID
      Subnets:
        - Fn::ImportValue: Three-tier-Network-Private-Subnet1ID
        - Fn::ImportValue: Three-tier-Network-Private-Subnet2ID 

  #Listener for Internal LoadBalancer
  IntALBListener:  
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - forward
      LoadBalancerArn: 
        - Ref: IntLoadbalancer
      Port: 80
      Protocol: HTTP

  #Target group Internal LoadBalancer
  IntALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 10
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue: Three-tier-Network-vpc
  
  #AutoScaling for Web facing Instances
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: 
        - Fn::ImportValue: Three-tier-Network-Public-Subnet1ID
        - Fn::ImportValue: Three-tier-Network-Public-Subnet2ID
        
      LaunchConfigurationName: 
        - Ref: WebServerConfig
      MinSize: '1'
      MaxSize: '5'
      HealthCheckGracePeriod: 300
      MaxInstanceLifetime: 2592000
      TargetGroupARNs:
        - Ref: ALBTargetGroup
  
  WebServerConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0af8f94516a723fd8
      SecurityGroups: 
        - Fn::ImportValue: static-resourcesWeb-SecurityGroupID
      InstanceType: t3.micro
      KeyName: !Ref WebKeyName

  #AutoScaling for Application Instances  
  APPServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: 
        - Fn::ImportValue: Three-tier-Network-Private-Subnet1ID
        - Fn::ImportValue: Three-tier-Network-Private-Subnet2ID
  
      LaunchConfigurationName: 
        - Ref: APPServerConfig
      MinSize: '1'
      MaxSize: '5'
      HealthCheckGracePeriod: 300
      MaxInstanceLifetime: 2592000
      TargetGroupARNs: !Ref IntALBTargetGroup   

  APPServerConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0af8f94516a723fd8
      SecurityGroups:
        - Fn::ImportValue: static-resources-App-SecurityGroupID
      InstanceType: t3.micro
      KeyName: !Ref AppKeyName

  #Origin access identity for cloudfront.    
  cloudfrontoriginaccessidentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref myCloudfrontDistribution
  
  #Cloudfront Distribution with origins access
  myCloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - Id: myS3Origin
          DomainName: mybucket.s3.amazonaws.com
          S3OriginConfig:
            OriginAccessIdentity: 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        - Id: ExtLoadbalancer
          DomainName: www.abdulrahman.com
          CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
        Enabled: 'true'
        Comment: Some comment
        DefaultRootObject: index.html
        Logging:
          IncludeCookies: 'true'
          Bucket: mylogs.s3.amazonaws.com
          Prefix: myprefix
        Aliases:
        - ridwan.abdulrahman.com
        - ashraf.abdulrahman.com
        DefaultCacheBehavior:
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: all
          ViewerProtocolPolicy: allow-all
          MinTTL: '100'
          SmoothStreaming: 'true'
        CacheBehaviors:
        - AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: 'true'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
          MinTTL: '50'
          PathPattern: images1/*.jpg
        - AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: ExtLoadbalancer
          ForwardedValues:
            QueryString: 'true'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
          MinTTL: '50'
          PathPattern: images2/*.jpg
        CustomErrorResponses:
        - ErrorCode: '404'
          ResponsePagePath: "/error-pages/404.html"
          ResponseCode: '200'
          ErrorCachingMinTTL: '30'
        PriceClass: PriceClass_All
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'